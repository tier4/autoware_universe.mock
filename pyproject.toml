[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "autoware-workflow-sync"
version = "0.1.0"
description = "Workflow sync script for autoware_universe"
authors = ["Autoware Foundation"]
readme = "README.md"
packages = []

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.32.4"
"ruamel.yaml" = "^0.18.6"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0.0"
ruff = "^0.1.0"

[tool.poetry.scripts]
sync-workflows = "sync_workflows:main"

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # Pyflakes
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "SIM",   # flake8-simplify
    "I",     # isort
    "N",     # pep8-naming
    "C90",   # mccabe complexity
    "ANN",   # flake8-annotations
    "S",     # flake8-bandit
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "DJ",    # flake8-django
    "EM",    # flake8-errmsg
    "EXE",   # flake8-executable
    "FA",    # flake8-future-annotations
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "G",     # flake8-logging-format
    "INP",   # flake8-no-pep420
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "SLOT",  # flake8-slots
    "TID",   # flake8-tidy-imports
    "TCH",   # flake8-type-checking
    "INT",   # flake8-gettext
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "TD",    # flake8-todos
    "FIX",   # flake8-fixme
    "ERA",   # eradicate
    "PD",    # pandas-vet
    "PGH",   # pygrep-hooks
    "PL",    # Pylint
    "TRY",   # tryceratops
    "FLY",   # flynt
    "NPY",   # NumPy-specific rules
    "PERF",  # Perflint
    "FURB",  # refurb
    "LOG",   # flake8-logging
    "RUF",   # Ruff-specific rules
]

ignore = [
    "T201",   # print() allowed in CLI scripts
    "S101",   # assert allowed
    "PLR0913", # Too many arguments
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used in comparison
    "ANN101",  # Missing type annotation for self (deprecated)
    "ANN102",  # Missing type annotation for cls (deprecated)
    "EXE001",  # Shebang not needed for module
    "INP001",  # Part of implicit namespace package
]

[tool.ruff.lint.per-file-ignores]
"sync_workflows.py" = [
    "T201",    # print() is converted to logging
    "S602",    # subprocess-popen-with-shell-equals-true
    "PLR0913", # Too many arguments to function call
]

[tool.ruff.lint.mccabe]
max-complexity = 10
